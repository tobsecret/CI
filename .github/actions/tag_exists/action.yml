name: "tag exists"
description: "Checks whether an image with a tag exists on registry"
inputs:
  tag:
    description: "The image tag to be checked"
    required: true
  registry:
    description: "The registry to check for the tag"
    default: quay.io
  username:
    description: "The username for the registry"
    required: true
  password:
    description: "The password associated with the username at the registry"
    required: true
  pyproject_toml_path:
    description: "The path to the pyproject.toml file"
    required: true

outputs:
  tag_exists:
    description: "Whether or not the tag exists at the remote"
    value: ${{steps.tag_exists.outputs.TAG_EXISTS}}

runs:
  using: composite
  steps:
    - name: Install regctl
      uses: regclient/actions/regctl-installer@main
    - name: regctl login to quay.io
      uses: regclient/actions/regctl-login@main
      with:
        registry: ${{ inputs.registry}}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: Calculate pyproject.toml SHA
      id: pyproject_toml_sha
      uses: ./.github/actions/sha
      with:
        path: ${{ inputs.pyproject_toml_path }}
    - name: tag exists
      id: tag_exists
      run: |
        if regctl tag ls ${{ inputs.tag }} | grep -q ${{steps.pyproject_toml_sha.outputs.PYPROJECT_TOML_SHA}}
          then
            echo "TAG_EXISTS=true"
            echo "TAG_EXISTS=true" >> "$GITHUB_OUTPUT"
          else
            echo "TAG_EXISTS=false"
            echo "TAG_EXISTS=false" >> "$GITHUB_OUTPUT"
        fi
      shell: bash
